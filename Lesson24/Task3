# Task 3
# Extend the Stack to include a method called get_from_stack
# that searches and returns an element e from a stack.
# Any other element must remain on the stack respecting their order.
# Consider the case in which the element is not found - raise ValueError with proper info Message

from stack import Stack


class ExtendedStack(Stack):

    def __init__(self):
        super().__init__()

    def get_from_stack(self, element):
        for item in self._items:
            if len(self._items) > 0 and item == element:
                return item
            else:
                raise ValueError(f'The element {element} is not found!')


try:
    s = ExtendedStack()
    s.push('1')
    s.push('2')
    s.push('3')
    print(s)
    print(s.get_from_stack('4'))
    print(s)
except ValueError as er_msg:
    print(er_msg)
