# Task 3
# Fraction
# Create a Fraction class, which will represent all basic arithmetic logic for fractions (+, -, /, *)
# with appropriate checking and error handling
# ```
# class Fraction:
# pass
#
# x = Fraction(1/2)
# y = Fraction(1/4)
# x + y == Fraction(3/4)

class Fraction:

    def __init__(self, numerator, denominator):
        self.numerator = numerator
        self.denominator = denominator

        if self.numerator == 0 or self.denominator == 0:
            raise ValueError('Numerator and denominator have to be not a zero!')

    def __str__(self):
        return f'{self.numerator}/{self.denominator}'

    # Method makes the reduction of fraction.
    def reduction(self, numerator, denominator):
        self.numerator = numerator
        self.denominator = denominator
        a = 0  # a - counter
        while a < 5:
            for i in range(2, 10):
                if self.numerator % i == 0 and self.denominator % i == 0:
                    self.numerator = int(self.numerator / i)
                    self.denominator = int(self.denominator / i)
                continue
            a += 1
        return f'{self.numerator}/{self.denominator}'

    # Addition of fractions: a/b + c/d = (a*d + c*b)/b*d. And makes the reduction of the answer.
    def __add__(self, other):
        self.numerator = self.numerator * other.denominator + other.numerator * self.denominator
        self.denominator = self.denominator * other.denominator
        self.reduction(self.numerator, self.denominator)
        return f'{self.numerator}/{self.denominator}'

    # Subtraction of fractions: a/b - c/d = (a*d - c*b)/b*d. And makes the reduction of the answer.
    def __sub__(self, other):
        self.numerator = self.numerator * other.denominator - other.numerator * self.denominator
        self.denominator = self.denominator * other.denominator
        self.reduction(self.numerator, self.denominator)
        return f'{self.numerator}/{self.denominator}'

    # Multiplication of fractions: a/b * c/d = a*c/b*d. And makes the reduction of the answer.
    def __mul__(self, other):
        self.numerator = self.numerator * other.numerator
        self.denominator = self.denominator * other.denominator
        self.reduction(self.numerator, self.denominator)
        return f'{self.numerator}/{self.denominator}'

    # Division of fractions: a/b : c/d = a/b * d/c = a*d/b*c. And makes the reduction of the answer.
    def __truediv__(self, other):
        self.numerator = self.numerator * other.denominator
        self.denominator = self.denominator * other.numerator
        self.reduction(self.numerator, self.denominator)
        return f'{self.numerator}/{self.denominator}'


x = Fraction(1, 2)
y = Fraction(1, 4)

print(x)
print(y)
print(x + y)
print(x - y)
print(x * y)
print(x / y)
